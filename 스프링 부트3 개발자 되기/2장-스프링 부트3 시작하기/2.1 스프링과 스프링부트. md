## ## 스프링의 등장
대규모의 복잡한 데이터를 관리하는 엔터프라이즈 애플리케이션에서 많은 사용자들의 동시 요청을 관리하는 것은 힘든 일이다. 거기에 더해 비즈니스 로직과 보안 등 여러 기술들도 동시에 관리해야 한다. 이러한 상황에서 2003년 **스프링**이라는 프레임워크가 등장했다.
**스프링 프레임워크는 높은 수준의 서버의 성능, 안정성, 보안을 제공하는 도구**다. 덕분에 개발자들은 기능 개발에 더 집중할 수 있게 되었다.



## ## 스프링을 더 쉽게 만들어주는 스프링 부트
스프링의 가장 큰 단점은 설정이 복잡하다는 것이다. 이런 스프링의 단점을 보완하고자 출시된 것이 스프링 부트이다. 스프링 부트는 '스타터'라는 의존성 세트를 이용해 스프링 프레임 워크를 더 쉽고 빠르게 이용할 수 있도록 도와준다. 스프링과 비교했을 때 스프링 부트의 특징은 다음과 같다.

1. 톰캣, 제티, 언더토우 같은 웹 애플리케이션 서버가 내장되어 있어 따로 설치할 필요가 없다.
2. 빌드 구성을 단순화하는 스프링 부트 스타터를 제공한다.
3. XML 설정을 하지 않고 자바 코드로 모두 작성할 수 있다.
4. JAR를 이용해서 자바 옵션만으로 배포가 가능하다.
5. 애플리케이션 모니터링 및 관리도구인 스프링 액츄에이터를 제공한다.

스프링 부트는 스프링에 속한 도구로 다른 도구가 아님을 주의하자.



## ## 스프링 VS. 스프링 부트
그렇다면 둘의 **차이점**은 무엇일까? 크게 두 가지가 있다.
1. 스프링은 개발에 필요한 환경을 수동으로 구성한다. 
2. 스프링은 톰캣과 같은 WAS에서 배포되지만 스프링 부트는 자체적으로 WAS를 가지고 있기 대문에 JAR파일만 만들면 WAS를 설정하지 않아도 애플리케이션을 실행할 수 있다.
